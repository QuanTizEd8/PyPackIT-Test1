repo:
  homepage: ${{ web.url.home }}$
  topics: |
    #{{
      return [
        slugify(keyword) for keyword in get("keywords", []) if len(keyword) <= 50
      ][:20]
    }}#
  secret_scanning: true
  secret_scanning_push_protection: true
  vulnerability_alerts: true
  automated_security_fixes: true
  private_vulnerability_reporting: true
  has_discussions: true
  has_projects: false
  has_wiki: false
  allow_merge_commit: false
  allow_rebase_merge: true
  allow_auto_merge: false
  delete_branch_on_merge: false
  allow_update_branch: true
  archived: false
  gitignore:
    # Project-specific files
    - ${{ web.path.root }}$/.build/
    - ${{ web.path.source }}$/${{ web.page.api.path }}$/**/*
    - ${{ local.cache.path }}$/**
    - '!${{ local.cache.path }}$/**/'
    - '!${{ local.cache.path }}$/**/README.md'
    - ${{ local.report.path }}$/**
    - '!${{ local.report.path }}$/**/'
    - '!${{ local.report.path }}$/**/README.md'
    # Byte-compiled / optimized / DLL files
    - __pycache__/
    - "*.py[cod]"
    - "*$py.class"
    # C extensions
    - "*.so"
    # Distribution / packaging
    - .Python
    - ./build/
    - develop-eggs/
    - dist/
    - downloads/
    - eggs/
    - .eggs/
    - lib/
    - lib64/
    - parts/
    - sdist/
    - var/
    - wheels/
    - share/python-wheels/
    - "*.egg-info/"
    - .installed.cfg
    - "*.egg"
    # PyInstaller
    #  Usually these files are written by a python script from a template
    #  before PyInstaller builds the exe, so as to inject date/other infos into it.
    - "*.manifest"
    - "*.spec"
    # Installer logs
    - pip-log.txt
    - pip-delete-this-directory.txt
    # Unit test / coverage reports
    - htmlcov/
    - .tox/
    - .nox/
    - .coverage
    - .coverage.*
    - .cache
    - nosetests.xml
    - coverage.xml
    - "*.cover"
    - .hypothesis/
    - .pytest_cache
    - cover/
    # Translations
    - "*.mo"
    - "*.pot"
    # Django stuff:
    - "*.log"
    - local_settings.py
    - db.sqlite3
    - db.sqlite3-journal
    # Flask stuff:
    - instance/
    - .webassets-cache
    # Scrapy stuff:
    - .scrapy
    # Sphinx documentation
    - docs/website/_build/
    - docs/website/source/api/_autosummary
    # PyBuilder
    - .pybuilder/
    - target/
    # Jupyter Notebook
    - .ipynb_checkpoints
    # IPython
    - profile_default/
    - ipython_config.py
    # pyenv
    - .python-version
    # Celery stuff
    - celerybeat-schedule
    - celerybeat.pid
    # SageMath parsed files
    - "*.sage.py"
    # Environments
    - .env
    - .venv
    - env/
    - venv/
    - ENV/
    - env.bak/
    - venv.bak/
    # Spyder project settings
    - .spyderproject
    - .spyproject
    # Rope project settings
    - .ropeproject
    # mkdocs documentation
    - /site
    # mypy
    - .mypy_cache/
    - .dmypy.json
    - dmypy.json
    # Pyre type checker
    # There are reports this comes from LLVM profiling, but also Xcode 9.
    - .pyre/
    # pytype static type analyzer
    - .pytype/
    # Cython debug symbols
    - cython_debug/
    # profraw files from LLVM? Unclear exactly what triggers this
    # There are reports this comes from LLVM profiling, but also Xcode 9.
    - "*profraw"
    # In-tree generated files
    - "*/_version.py"
    # VSCode
    - .vscode/
    # PyCharm
    - .idea/
    # MacOS system files
    - .DS_Store
branch:
  main:
    name: main
    ruleset:
      protect_creation: true
      protect_modification:
        allow_fetch_and_merge: true
      protect_deletion: true
      protect_force_push: true
      require_linear_history: true
      require_signatures: true
      require_pull_request:
        dismiss_stale_reviews_on_push: true
        require_code_owner_review: true
        require_last_push_approval: true
        require_review_thread_resolution: true
        required_approving_review_count: 1
  release:
    name: release/v
    ruleset: ${{ branch.main.ruleset }}$
  pre:
    name: prerelease/v
    ruleset: ${{ branch.main.ruleset }}$
  dev:
    name: dev/
    ruleset:
      protect_creation: true
      protect_deletion: true
      protect_force_push: true
      require_linear_history: true
  auto:
    name: auto-update/
    ruleset: ${{ branch.dev.ruleset }}$
tag:
  version:
    prefix: ver/
file:
  duplicate:
    license_texts:
      sources: |
        #{{
          return [
            component["path"]["text_plain"]
            for component in get("license.component", {}).values()
          ]
        }}#
      destinations:
        - ${{ pkg.path.root }}$/LICENSES
        - ${{ test.path.root }}$/LICENSES
    copyright_texts:
      sources: |
        #{{
          return [
            component["path"]["header_plain"]
            for component in get("license.component", {}).values()
            if component["path"].get("header_plain")
          ]
        }}#
      destinations:
        - ${{ pkg.path.root }}$/COPYRIGHTS
        - ${{ test.path.root }}$/COPYRIGHTS
